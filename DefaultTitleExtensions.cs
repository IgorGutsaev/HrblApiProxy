// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Filuet.Fusion.SDK
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for DefaultTitle.
    /// </summary>
    public static partial class DefaultTitleExtensions
    {
            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static string GetDistributorVolumePoints(this IDefaultTitle operations, Body body = default(Body))
            {
                return operations.GetDistributorVolumePointsAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> GetDistributorVolumePointsAsync(this IDefaultTitle operations, Body body = default(Body), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetDistributorVolumePointsWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static void GetDSPostamatDetails(this IDefaultTitle operations, Body1 body = default(Body1))
            {
                operations.GetDSPostamatDetailsAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetDSPostamatDetailsAsync(this IDefaultTitle operations, Body1 body = default(Body1), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.GetDSPostamatDetailsWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static string GetSkuAvailability(this IDefaultTitle operations, Body2 body = default(Body2))
            {
                return operations.GetSkuAvailabilityAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> GetSkuAvailabilityAsync(this IDefaultTitle operations, Body2 body = default(Body2), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetSkuAvailabilityWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static string GetShippingWhseAndFreightCodes(this IDefaultTitle operations, Body3 body = default(Body3))
            {
                return operations.GetShippingWhseAndFreightCodesAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> GetShippingWhseAndFreightCodesAsync(this IDefaultTitle operations, Body3 body = default(Body3), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetShippingWhseAndFreightCodesWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static string SubmitOrder(this IDefaultTitle operations, Body4 body = default(Body4))
            {
                return operations.SubmitOrderAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> SubmitOrderAsync(this IDefaultTitle operations, Body4 body = default(Body4), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SubmitOrderWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static string HPSPaymentGateway(this IDefaultTitle operations, Body5 body = default(Body5))
            {
                return operations.HPSPaymentGatewayAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> HPSPaymentGatewayAsync(this IDefaultTitle operations, Body5 body = default(Body5), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.HPSPaymentGatewayWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static string DsCashLimit(this IDefaultTitle operations, Body6 body = default(Body6))
            {
                return operations.DsCashLimitAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> DsCashLimitAsync(this IDefaultTitle operations, Body6 body = default(Body6), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DsCashLimitWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static string Validate(this IDefaultTitle operations, Body7 body = default(Body7))
            {
                return operations.ValidateAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> ValidateAsync(this IDefaultTitle operations, Body7 body = default(Body7), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ValidateWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static string GetDistributorDiscount(this IDefaultTitle operations, Body8 body = default(Body8))
            {
                return operations.GetDistributorDiscountAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> GetDistributorDiscountAsync(this IDefaultTitle operations, Body8 body = default(Body8), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetDistributorDiscountWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static string UpdateDsAddressContacts(this IDefaultTitle operations, Body9 body = default(Body9))
            {
                return operations.UpdateDsAddressContactsAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> UpdateDsAddressContactsAsync(this IDefaultTitle operations, Body9 body = default(Body9), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateDsAddressContactsWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static string GetProductInventory(this IDefaultTitle operations, Body10 body = default(Body10))
            {
                return operations.GetProductInventoryAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> GetProductInventoryAsync(this IDefaultTitle operations, Body10 body = default(Body10), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetProductInventoryWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static void GetProductCatalog(this IDefaultTitle operations, Body11 body = default(Body11))
            {
                operations.GetProductCatalogAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetProductCatalogAsync(this IDefaultTitle operations, Body11 body = default(Body11), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.GetProductCatalogWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static void GetPriceDetails(this IDefaultTitle operations, Body12 body = default(Body12))
            {
                operations.GetPriceDetailsAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetPriceDetailsAsync(this IDefaultTitle operations, Body12 body = default(Body12), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.GetPriceDetailsWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static string DSFOPPurchasingLimits(this IDefaultTitle operations, Body13 body = default(Body13))
            {
                return operations.DSFOPPurchasingLimitsAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> DSFOPPurchasingLimitsAsync(this IDefaultTitle operations, Body13 body = default(Body13), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DSFOPPurchasingLimitsWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static string GetOrderDualMonthStatus(this IDefaultTitle operations, Body14 body = default(Body14))
            {
                return operations.GetOrderDualMonthStatusAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> GetOrderDualMonthStatusAsync(this IDefaultTitle operations, Body14 body = default(Body14), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetOrderDualMonthStatusWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static void GetDistributorProfile(this IDefaultTitle operations, Body15 body = default(Body15))
            {
                operations.GetDistributorProfileAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Auto generated using Swagger Inspector
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetDistributorProfileAsync(this IDefaultTitle operations, Body15 body = default(Body15), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.GetDistributorProfileWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
